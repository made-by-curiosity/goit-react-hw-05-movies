{"version":3,"file":"static/js/834.246636a4.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/AdditionalInfo/AdditionalInfo.styled.jsx","components/AdditionalInfo/AdditionalInfo.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","components/ReturnBtn/ReturnBtn.styled.jsx","components/ReturnBtn/ReturnBtn.jsx","pages/MovieDetails.jsx","services/moviesApi.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const PageSection = styled.section`\n  padding-top: 20px;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { PageSection, SectionTitle } from './Section.styled';\n\nconst Section = ({ children, title }) => {\n  return (\n    <PageSection>\n      {title && <SectionTitle>{title}</SectionTitle>}\n      {children}\n    </PageSection>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const AdditionalMovieInfo = styled.div``;\n\nexport const InfoMenu = styled.div`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin-bottom: 20px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  border-top: 2px solid Silver;\n  border-bottom: 2px solid Silver;\n`;\n\nexport const MenuList = styled.ul`\n  padding-left: 5px;\n\n  display: flex;\n  gap: 20px;\n`;\n\nexport const MenuInfoItem = styled.li`\n  display: flex;\n\n  gap: 2px;\n  align-items: center;\n\n  font-weight: 600;\n\n  & svg {\n    width: 16px;\n    height: 16px;\n    fill: goldenrod;\n  }\n\n  & a {\n    color: black;\n    text-decoration: underline;\n\n    &:hover,\n    &:focus {\n      color: orangered;\n    }\n  }\n`;\n","import { Suspense } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport { GiAlliedStar, Gi3DGlasses } from 'react-icons/gi';\nimport { LoadingFallback } from 'components/LoadingFallback/LoadingFallback';\nimport {\n  AdditionalMovieInfo,\n  InfoMenu,\n  MenuInfoItem,\n  MenuList,\n} from './AdditionalInfo.styled';\n\nexport const AdditionalInfo = () => {\n  return (\n    <AdditionalMovieInfo>\n      <InfoMenu>\n        <p>Additional information</p>\n        <MenuList>\n          <MenuInfoItem>\n            <GiAlliedStar />\n            <Link to=\"cast\">Cast</Link>\n          </MenuInfoItem>\n          <MenuInfoItem>\n            <Gi3DGlasses />\n            <Link to=\"reviews\">Reviews</Link>\n          </MenuInfoItem>\n        </MenuList>\n      </InfoMenu>\n      <Suspense fallback={<LoadingFallback />}>\n        <Outlet />\n      </Suspense>\n    </AdditionalMovieInfo>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MovieInfoWrapper = styled.div`\n  width: 100%;\n  margin-bottom: 20px;\n\n  display: flex;\n  gap: 20px;\n`;\n\nexport const PosterContainer = styled.div`\n  height: 300px;\n  min-width: 200px;\n  width: 200px;\n\n  & > img {\n    height: 100%;\n    width: 100%;\n\n    object-fit: cover;\n  }\n`;\n\nexport const TextWrapper = styled.div`\n  padding-top: 10px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport const MovieGenres = styled.p`\n  display: flex;\n  gap: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  MovieGenres,\n  MovieInfoWrapper,\n  PosterContainer,\n  TextWrapper,\n} from './MovieInfo.styled';\n\nexport const MovieInfo = ({\n  moviePoster,\n  scorePercentage,\n  title,\n  overview,\n  genres,\n}) => {\n  return (\n    <MovieInfoWrapper>\n      <PosterContainer>\n        <img src={moviePoster} alt={title} />\n      </PosterContainer>\n      <TextWrapper>\n        <h2>{title}</h2>\n        <p>User score: {scorePercentage}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h4>Genres</h4>\n        {genres.length !== 0 ? (\n          <MovieGenres>\n            {genres.map(({ name }) => (\n              <span key={name}>{name}</span>\n            ))}\n          </MovieGenres>\n        ) : (\n          <p>We couldn't find genre of this movie</p>\n        )}\n      </TextWrapper>\n    </MovieInfoWrapper>\n  );\n};\n\nMovieInfo.propTypes = {\n  moviePoster: PropTypes.string.isRequired,\n  scorePercentage: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ReturnButton = styled(Link)`\n  width: 100px;\n  padding-top: 2px;\n  padding-bottom: 2px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin-bottom: 10px;\n\n  display: inline-flex;\n  justify-content: center;\n\n  border: 1px solid rgb(192, 192, 192);\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    background-color: orangered;\n    color: rgb(250, 250, 250);\n  }\n\n  &:active {\n    background-color: DarkRed;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ReturnButton } from './ReturnBtn.styled';\n\nexport const ReturnBtn = ({ backLink }) => {\n  return <ReturnButton to={backLink}>&#129044; Go back</ReturnButton>;\n};\n\nReturnBtn.propTypes = {\n  backLink: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string.isRequired,\n      hash: PropTypes.string.isRequired,\n      state: PropTypes.any,\n      key: PropTypes.string.isRequired,\n    }),\n  ]).isRequired,\n};\n","import { useState, useRef, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { AdditionalInfo } from 'components/AdditionalInfo/AdditionalInfo';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { ReturnBtn } from 'components/ReturnBtn/ReturnBtn';\nimport Section from 'components/Section/Section';\nimport { getMovieInfo } from 'services/moviesApi';\n\nconst IMG_500W_PATH = 'https://image.tmdb.org/t/p/w500';\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    (async function fetchMovieInfo() {\n      try {\n        const fullMovieInfo = await getMovieInfo(movieId);\n        setMovieInfo(fullMovieInfo.data);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [movieId]);\n\n  const {\n    poster_path,\n    title,\n    genres = [],\n    overview,\n    vote_average = 0,\n  } = movieInfo;\n\n  const moviePoster = poster_path ? IMG_500W_PATH + poster_path : defaultImg;\n  const scorePercentage = (vote_average * 10).toFixed();\n\n  if (movieInfo.length === 0) {\n    return;\n  }\n\n  return (\n    <Section>\n      <ReturnBtn backLink={backLinkLocationRef.current} />\n      <MovieInfo\n        title={title}\n        overview={overview}\n        genres={genres}\n        moviePoster={moviePoster}\n        scorePercentage={scorePercentage}\n      />\n      <AdditionalInfo />\n    </Section>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst movies = axios.create({\n  baseURL: 'https://api.themoviedb.org',\n});\nmovies.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjYjM1NTk3YjJiMDViYjE0YmM5ZjJmY2Y5YzdjODE3NSIsInN1YiI6IjY0NTE2ZWFlMzNhZDhmMDEzODBjNjJkNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.bMoVDHRK88i5iEyNrLKnupm4rYxoTTHyrlIdKlXSsAo';\n\nconst TRENDING_PATH = '/3/trending/movie/day';\nconst MOVIE_INFO_PATH = '/3/movie/';\nconst MOVIE_SEARCH_PATH = '/3/search/movie';\n\nexport function getTrendingMovies() {\n  return movies.get(TRENDING_PATH);\n}\n\nexport const getMovieInfo = (movieId, path = '') => {\n  return movies.get(MOVIE_INFO_PATH + movieId + path);\n};\n\nexport const searchMovies = searchQuery => {\n  return movies.get(MOVIE_SEARCH_PATH + `?query=${searchQuery}`);\n};\n"],"names":["PageSection","styled","SectionTitle","children","title","AdditionalMovieInfo","InfoMenu","MenuList","MenuInfoItem","AdditionalInfo","to","Suspense","fallback","LoadingFallback","MovieInfoWrapper","PosterContainer","TextWrapper","MovieGenres","MovieInfo","moviePoster","scorePercentage","overview","genres","src","alt","length","map","name","ReturnButton","Link","ReturnBtn","backLink","useState","movieInfo","setMovieInfo","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","getMovieInfo","fullMovieInfo","data","console","log","poster_path","vote_average","toFixed","Section","current","movies","axios","baseURL","defaults","headers","common","MOVIE_INFO_PATH","getTrendingMovies","get","path","searchMovies","searchQuery"],"sourceRoot":""}