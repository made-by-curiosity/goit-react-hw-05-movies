{"version":3,"file":"static/js/387.7ee43ee7.chunk.js","mappings":"iQAEaA,E,OAAcC,EAAAA,GAAH,6Q,kBCqCxB,EAjCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,YACR,iBAAC,qGAC4BC,EAAAA,EAAAA,IAAaH,EAAS,YADlD,OACOI,EADP,OAGCL,EAAWK,EAAaC,KAAKC,SAH9B,0CAAD,EAKD,GAAE,CAACN,IAEmB,IAAnBF,EAAQS,QACH,qEAIP,SAACZ,EAAD,UACGG,EAAQU,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,qCACWD,GACT,SAAC,MAAD,QAEF,uBAAIC,MALGF,EAQZ,KAGN,C,2GCnCKG,E,OAASC,EAAAA,OAAa,CAC1BC,QAAS,+BAEXF,EAAOG,SAASC,QAAQC,OAAxB,cACE,6NAEF,IACMC,EAAkB,YAGjB,SAASC,IACd,OAAOP,EAAOQ,IALM,wBAMrB,CAEM,IAAMjB,EAAe,SAACH,GAAwB,IAAfqB,EAAc,uDAAP,GAC3C,OAAOT,EAAOQ,IAAIF,EAAkBlB,EAAUqB,EAC/C,EAEYC,EAAe,SAAAC,GAC1B,OAAOX,EAAOQ,IAXU,kBAWW,iBAAaG,GACjD,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/moviesApi.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  & svg {\n    width: 20px;\n    height: 20px;\n    margin-left: 5px;\n\n    fill: orangered;\n  }\n\n  & h4 {\n    margin-bottom: 10px;\n  }\n\n  & p {\n    padding-left: 20px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BsChatTextFill } from 'react-icons/bs';\nimport { ReviewsList } from './Reviews.styled';\nimport { getMovieInfo } from 'services/moviesApi';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      const movieReviews = await getMovieInfo(movieId, '/reviews');\n\n      setReviews(movieReviews.data.results);\n    })();\n  }, [movieId]);\n\n  if (reviews.length === 0) {\n    return <p>We don't have any reviews for this movie</p>;\n  }\n\n  return (\n    <ReviewsList>\n      {reviews.map(({ id, author, content }) => {\n        return (\n          <li key={id}>\n            <h4>\n              Author: {author}\n              <BsChatTextFill />\n            </h4>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </ReviewsList>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst movies = axios.create({\n  baseURL: 'https://api.themoviedb.org',\n});\nmovies.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjYjM1NTk3YjJiMDViYjE0YmM5ZjJmY2Y5YzdjODE3NSIsInN1YiI6IjY0NTE2ZWFlMzNhZDhmMDEzODBjNjJkNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.bMoVDHRK88i5iEyNrLKnupm4rYxoTTHyrlIdKlXSsAo';\n\nconst TRENDING_PATH = '/3/trending/movie/day';\nconst MOVIE_INFO_PATH = '/3/movie/';\nconst MOVIE_SEARCH_PATH = '/3/search/movie';\n\nexport function getTrendingMovies() {\n  return movies.get(TRENDING_PATH);\n}\n\nexport const getMovieInfo = (movieId, path = '') => {\n  return movies.get(MOVIE_INFO_PATH + movieId + path);\n};\n\nexport const searchMovies = searchQuery => {\n  return movies.get(MOVIE_SEARCH_PATH + `?query=${searchQuery}`);\n};\n"],"names":["ReviewsList","styled","useState","reviews","setReviews","movieId","useParams","useEffect","getMovieInfo","movieReviews","data","results","length","map","id","author","content","movies","axios","baseURL","defaults","headers","common","MOVIE_INFO_PATH","getTrendingMovies","get","path","searchMovies","searchQuery"],"sourceRoot":""}