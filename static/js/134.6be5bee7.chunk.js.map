{"version":3,"file":"static/js/134.6be5bee7.chunk.js","mappings":"iOAyDA,UApDe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACR,iBAAC,8GAEoCC,EAAAA,EAAAA,IAC/BL,EAAaM,IAAI,UAHtB,OAESC,EAFT,OAKGT,EAAUS,EAAmBC,KAAKC,SALrC,gDAOGC,QAAQC,IAAR,MAPH,wDAAD,EAUD,GAAE,CAACX,IAcJ,OACE,4BACE,yCACA,kBAAMY,SAfO,SAAAC,GACfA,EAAEC,iBAEGD,EAAEE,OAAOC,SAASC,MAAMC,QAI7BjB,EAAgB,CAAEgB,MAAOJ,EAAEE,OAAOC,SAASC,MAAMC,QAEjDL,EAAEE,OAAOI,QACV,EAKG,WACE,kBAAOC,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,uBAEiB,IAAlBvB,EAAOyB,SACN,wBACGzB,EAAO0B,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAM1B,GAAxC,SACGsB,EAAMK,SAFFL,EAAME,GADA,QAW1B,C,oKCrDKI,EAAU,mCACVC,EAAW,6BAEXC,EAAkB,YAGjB,SAASC,IACd,IAAMC,EAAU,CACdC,OAAQ,MACRC,IAAKL,EAPa,wBAQlBM,OAAQ,CACNC,QAASR,GAEXS,QAAS,CACPC,OAAQ,qBAIZ,OAAOC,EAAAA,EAAAA,QAAcP,EACtB,CAEM,IAAMQ,EAAe,SAAAC,GAC1B,IAAMT,EAAU,CACdC,OAAQ,MACRC,IAAKL,EAAWC,EAAkBW,EAClCN,OAAQ,CACNC,QAASR,GAEXS,QAAS,CACPC,OAAQ,qBAIZ,OAAOC,EAAAA,EAAAA,QAAcP,EACtB,EAEYU,EAAkB,SAAAD,GAC7B,IAAMT,EAAU,CACdC,OAAQ,MACRC,IAAI,GAAD,OAAKL,EAAWC,GAAhB,OAAkCW,EAAlC,YACHN,OAAQ,CACNC,QAASR,GAEXS,QAAS,CACPC,OAAQ,qBAIZ,OAAOC,EAAAA,EAAAA,QAAcP,EACtB,EAEYW,EAAkB,SAAAF,GAC7B,IAAMT,EAAU,CACdC,OAAQ,MACRC,IAAI,GAAD,OAAKL,EAAWC,GAAhB,OAAkCW,EAAlC,YACHN,OAAQ,CACNC,QAASR,GAEXS,QAAS,CACPC,OAAQ,qBAIZ,OAAOC,EAAAA,EAAAA,QAAcP,EACtB,EAEY7B,EAAe,SAAAyC,GAC1B,IAAMZ,EAAU,CACdC,OAAQ,MACRC,IAAKL,EAjEiB,kBAkEtBM,OAAQ,CACNpB,MAAO6B,EACPR,QAASR,GAEXS,QAAS,CACPC,OAAQ,qBAIZ,OAAOC,EAAAA,EAAAA,QAAcP,EACtB,C","sources":["pages/Movies.jsx","services/moviesApi.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'services/moviesApi';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const searchMoviesResult = await searchMovies(\n          searchParams.get('query')\n        );\n        setMovies(searchMoviesResult.data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [searchParams]);\n\n  const onSearch = e => {\n    e.preventDefault();\n\n    if (!e.target.elements.query.value) {\n      return;\n    }\n\n    setSearchParams({ query: e.target.elements.query.value });\n\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <h2>Movies page</h2>\n      <form onSubmit={onSearch}>\n        <input type=\"text\" name=\"query\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {movies.length !== 0 && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'cb35597b2b05bb14bc9f2fcf9c7c8175';\nconst BASE_URL = 'https://api.themoviedb.org';\nconst TRENDING_PATH = '/3/trending/movie/day';\nconst MOVIE_INFO_PATH = '/3/movie/';\nconst MOVIE_SEARCH_PATH = '/3/search/movie';\n\nexport function getTrendingMovies() {\n  const options = {\n    method: 'GET',\n    url: BASE_URL + TRENDING_PATH,\n    params: {\n      api_key: API_KEY,\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return axios.request(options);\n}\n\nexport const getMovieInfo = movieId => {\n  const options = {\n    method: 'GET',\n    url: BASE_URL + MOVIE_INFO_PATH + movieId,\n    params: {\n      api_key: API_KEY,\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return axios.request(options);\n};\n\nexport const getMovieCredits = movieId => {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL + MOVIE_INFO_PATH}${movieId}/credits`,\n    params: {\n      api_key: API_KEY,\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return axios.request(options);\n};\n\nexport const getMovieReviews = movieId => {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL + MOVIE_INFO_PATH}${movieId}/reviews`,\n    params: {\n      api_key: API_KEY,\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return axios.request(options);\n};\n\nexport const searchMovies = searchQuery => {\n  const options = {\n    method: 'GET',\n    url: BASE_URL + MOVIE_SEARCH_PATH,\n    params: {\n      query: searchQuery,\n      api_key: API_KEY,\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return axios.request(options);\n};\n"],"names":["useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","searchMovies","get","searchMoviesResult","data","results","console","log","onSubmit","e","preventDefault","target","elements","query","value","reset","type","name","length","map","movie","to","id","state","from","title","API_KEY","BASE_URL","MOVIE_INFO_PATH","getTrendingMovies","options","method","url","params","api_key","headers","accept","axios","getMovieInfo","movieId","getMovieCredits","getMovieReviews","searchQuery"],"sourceRoot":""}