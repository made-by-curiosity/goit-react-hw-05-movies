{"version":3,"file":"static/js/736.3e0965bb.chunk.js","mappings":"qQAEaA,EAAaC,EAAAA,EAAAA,GAAH,mFAMVC,EAAYD,EAAAA,EAAAA,GAAH,6QAqBTE,EAAYF,EAAAA,EAAAA,EAAH,6C,kBCgBtB,EApCa,WACX,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,YACR,iBAAC,qGAC4BC,EAAAA,EAAAA,IAAaH,EAAS,YADlD,OACOI,EADP,OAECL,EAAQK,EAAaC,KAAKP,MAF3B,0CAAD,EAID,GAAE,CAACE,IAEgB,IAAhBF,EAAKQ,QACA,sEAIP,SAACb,EAAD,UACGK,EAAKS,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC/BC,EAAaD,EAtBL,kCAuBMA,EArB1B,8EAwBM,OACE,UAAChB,EAAD,YACE,gBAAKkB,IAAKD,EAAYE,IAAI,UAC1B,4BACE,SAAClB,EAAD,UAAYa,KACZ,uCAAeC,UAJHF,EAQnB,KAGN,C,2GCzCKO,E,OAASC,EAAAA,OAAa,CAC1BC,QAAS,+BAEXF,EAAOG,SAASC,QAAQC,OAAxB,cACE,6NAEF,IACMC,EAAkB,YAGjB,SAASC,IACd,OAAOP,EAAOQ,IALM,wBAMrB,CAEM,IAAMpB,EAAe,SAACH,GAAwB,IAAfwB,EAAc,uDAAP,GAC3C,OAAOT,EAAOQ,IAAIF,EAAkBrB,EAAUwB,EAC/C,EAEYC,EAAe,SAAAC,GAC1B,OAAOX,EAAOQ,IAXU,kBAWW,iBAAaG,GACjD,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/moviesApi.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ActorsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const ActorItem = styled.li`\n  display: flex;\n  gap: 10px;\n\n  height: 150px;\n\n  & img {\n    width: 100px;\n    max-width: 100px;\n    object-fit: cover;\n  }\n\n  & div {\n    padding-top: 10px;\n\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n`;\n\nexport const ActorName = styled.p`\n  font-weight: 600;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ActorItem, ActorName, ActorsList } from './Cast.styled';\nimport { getMovieInfo } from 'services/moviesApi';\n\nconst IMG_500W_PATH = 'https://image.tmdb.org/t/p/w500';\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      const movieCredits = await getMovieInfo(movieId, '/credits');\n      setCast(movieCredits.data.cast);\n    })();\n  }, [movieId]);\n\n  if (cast.length === 0) {\n    return <p>We couldn't find any actors of this movie</p>;\n  }\n\n  return (\n    <ActorsList>\n      {cast.map(({ cast_id, name, character, profile_path }) => {\n        const actorPhoto = profile_path\n          ? IMG_500W_PATH + profile_path\n          : defaultImg;\n\n        return (\n          <ActorItem key={cast_id}>\n            <img src={actorPhoto} alt=\"name\" />\n            <div>\n              <ActorName>{name}</ActorName>\n              <p>Character: {character}</p>\n            </div>\n          </ActorItem>\n        );\n      })}\n    </ActorsList>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst movies = axios.create({\n  baseURL: 'https://api.themoviedb.org',\n});\nmovies.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjYjM1NTk3YjJiMDViYjE0YmM5ZjJmY2Y5YzdjODE3NSIsInN1YiI6IjY0NTE2ZWFlMzNhZDhmMDEzODBjNjJkNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.bMoVDHRK88i5iEyNrLKnupm4rYxoTTHyrlIdKlXSsAo';\n\nconst TRENDING_PATH = '/3/trending/movie/day';\nconst MOVIE_INFO_PATH = '/3/movie/';\nconst MOVIE_SEARCH_PATH = '/3/search/movie';\n\nexport function getTrendingMovies() {\n  return movies.get(TRENDING_PATH);\n}\n\nexport const getMovieInfo = (movieId, path = '') => {\n  return movies.get(MOVIE_INFO_PATH + movieId + path);\n};\n\nexport const searchMovies = searchQuery => {\n  return movies.get(MOVIE_SEARCH_PATH + `?query=${searchQuery}`);\n};\n"],"names":["ActorsList","styled","ActorItem","ActorName","useState","cast","setCast","movieId","useParams","useEffect","getMovieInfo","movieCredits","data","length","map","cast_id","name","character","profile_path","actorPhoto","src","alt","movies","axios","baseURL","defaults","headers","common","MOVIE_INFO_PATH","getTrendingMovies","get","path","searchMovies","searchQuery"],"sourceRoot":""}