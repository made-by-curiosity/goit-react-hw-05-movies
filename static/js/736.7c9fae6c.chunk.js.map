{"version":3,"file":"static/js/736.7c9fae6c.chunk.js","mappings":"8QAEaA,EAAaC,EAAAA,EAAAA,GAAH,mFAMVC,EAAYD,EAAAA,EAAAA,GAAH,6QAqBTE,EAAYF,EAAAA,EAAAA,EAAH,6C,SCiBtB,EApCa,WACX,OAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,YACR,iBAAC,qGAC4BC,EAAAA,EAAAA,IAAgBH,GAD5C,OACOI,EADP,OAECL,EAAQK,EAAaC,KAAKP,MAF3B,0CAAD,EAID,GAAE,CAACE,IAEgB,IAAhBF,EAAKQ,QACA,sEAIP,SAACb,EAAD,UACGK,EAAKS,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC/BC,EAAaD,EAtBL,kCAuBMA,EArB1B,8EAwBM,OACE,UAAChB,EAAD,YACE,gBAAKkB,IAAKD,EAAYE,IAAI,UAC1B,4BACE,SAAClB,EAAD,UAAYa,KACZ,uCAAeC,UAJHF,EAQnB,KAGN,C,oKC1CKO,EAAU,mCACVC,EAAW,6BAEXC,EAAkB,YAGjB,SAASC,IACd,IAAMC,EAAU,CACdC,OAAQ,MACRC,IAAKL,EAPa,wBAQlBM,OAAQ,CACNC,QAASR,GAEXS,QAAS,CACPC,OAAQ,qBAIZ,OAAOC,EAAAA,EAAAA,QAAcP,EACtB,CAEM,IAAMQ,EAAe,SAAA3B,GAC1B,IAAMmB,EAAU,CACdC,OAAQ,MACRC,IAAKL,EAAWC,EAAkBjB,EAClCsB,OAAQ,CACNC,QAASR,GAEXS,QAAS,CACPC,OAAQ,qBAIZ,OAAOC,EAAAA,EAAAA,QAAcP,EACtB,EAEYhB,EAAkB,SAAAH,GAC7B,IAAMmB,EAAU,CACdC,OAAQ,MACRC,IAAI,GAAD,OAAKL,EAAWC,EAAkBjB,EAAlC,YACHsB,OAAQ,CACNC,QAASR,GAEXS,QAAS,CACPC,OAAQ,qBAIZ,OAAOC,EAAAA,EAAAA,QAAcP,EACtB,EAEYS,EAAkB,SAAA5B,GAC7B,IAAMmB,EAAU,CACdC,OAAQ,MACRC,IAAI,GAAD,OAAKL,EAAWC,EAAkBjB,EAAlC,YACHsB,OAAQ,CACNC,QAASR,GAEXS,QAAS,CACPC,OAAQ,qBAIZ,OAAOC,EAAAA,EAAAA,QAAcP,EACtB,EAEYU,EAAe,SAAAC,GAC1B,IAAMX,EAAU,CACdC,OAAQ,MACRC,IAAKL,EAjEiB,kBAkEtBM,OAAQ,CACNS,MAAOD,EACPP,QAASR,GAEXS,QAAS,CACPC,OAAQ,qBAIZ,OAAOC,EAAAA,EAAAA,QAAcP,EACtB,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/moviesApi.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ActorsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const ActorItem = styled.li`\n  display: flex;\n  gap: 10px;\n\n  height: 150px;\n\n  & img {\n    width: 100px;\n    max-width: 100px;\n    object-fit: cover;\n  }\n\n  & div {\n    padding-top: 10px;\n\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n`;\n\nexport const ActorName = styled.p`\n  font-weight: 600;\n`;\n","import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/moviesApi';\nimport { ActorItem, ActorName, ActorsList } from './Cast.styled';\n\nconst IMG_500W_PATH = 'https://image.tmdb.org/t/p/w500';\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      const movieCredits = await getMovieCredits(movieId);\n      setCast(movieCredits.data.cast);\n    })();\n  }, [movieId]);\n\n  if (cast.length === 0) {\n    return <p>We couldn't find any actors of this movie</p>;\n  }\n\n  return (\n    <ActorsList>\n      {cast.map(({ cast_id, name, character, profile_path }) => {\n        const actorPhoto = profile_path\n          ? IMG_500W_PATH + profile_path\n          : defaultImg;\n\n        return (\n          <ActorItem key={cast_id}>\n            <img src={actorPhoto} alt=\"name\" />\n            <div>\n              <ActorName>{name}</ActorName>\n              <p>Character: {character}</p>\n            </div>\n          </ActorItem>\n        );\n      })}\n    </ActorsList>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'cb35597b2b05bb14bc9f2fcf9c7c8175';\nconst BASE_URL = 'https://api.themoviedb.org';\nconst TRENDING_PATH = '/3/trending/movie/day';\nconst MOVIE_INFO_PATH = '/3/movie/';\nconst MOVIE_SEARCH_PATH = '/3/search/movie';\n\nexport function getTrendingMovies() {\n  const options = {\n    method: 'GET',\n    url: BASE_URL + TRENDING_PATH,\n    params: {\n      api_key: API_KEY,\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return axios.request(options);\n}\n\nexport const getMovieInfo = movieId => {\n  const options = {\n    method: 'GET',\n    url: BASE_URL + MOVIE_INFO_PATH + movieId,\n    params: {\n      api_key: API_KEY,\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return axios.request(options);\n};\n\nexport const getMovieCredits = movieId => {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL + MOVIE_INFO_PATH + movieId}/credits`,\n    params: {\n      api_key: API_KEY,\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return axios.request(options);\n};\n\nexport const getMovieReviews = movieId => {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL + MOVIE_INFO_PATH + movieId}/reviews`,\n    params: {\n      api_key: API_KEY,\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return axios.request(options);\n};\n\nexport const searchMovies = searchQuery => {\n  const options = {\n    method: 'GET',\n    url: BASE_URL + MOVIE_SEARCH_PATH,\n    params: {\n      query: searchQuery,\n      api_key: API_KEY,\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return axios.request(options);\n};\n"],"names":["ActorsList","styled","ActorItem","ActorName","useState","cast","setCast","movieId","useParams","useEffect","getMovieCredits","movieCredits","data","length","map","cast_id","name","character","profile_path","actorPhoto","src","alt","API_KEY","BASE_URL","MOVIE_INFO_PATH","getTrendingMovies","options","method","url","params","api_key","headers","accept","axios","getMovieInfo","getMovieReviews","searchMovies","searchQuery","query"],"sourceRoot":""}