{"version":3,"file":"static/js/387.02d2f473.chunk.js","mappings":"iQAEaA,E,OAAcC,EAAAA,GAAH,6Q,kBCsCxB,EAjCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,YACR,iBAAC,qGAC4BC,EAAAA,EAAAA,IAAgBH,GAD5C,OACOI,EADP,OAGCL,EAAWK,EAAaC,KAAKC,SAH9B,0CAAD,EAKD,GAAE,CAACN,IAEmB,IAAnBF,EAAQS,QACH,qEAIP,SAACZ,EAAD,UACGG,EAAQU,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,qCACWD,GACT,SAAC,MAAD,QAEF,uBAAIC,MALGF,EAQZ,KAGN,C,oKCpCKG,EAAU,mCACVC,EAAW,6BAEXC,EAAkB,YAGjB,SAASC,IACd,IAAMC,EAAU,CACdC,OAAQ,MACRC,IAAKL,EAPa,wBAQlBM,OAAQ,CACNC,QAASR,GAEXS,QAAS,CACPC,OAAQ,qBAIZ,OAAOC,EAAAA,EAAAA,QAAcP,EACtB,CAEM,IAAMQ,EAAe,SAAAxB,GAC1B,IAAMgB,EAAU,CACdC,OAAQ,MACRC,IAAKL,EAAWC,EAAkBd,EAClCmB,OAAQ,CACNC,QAASR,GAEXS,QAAS,CACPC,OAAQ,qBAIZ,OAAOC,EAAAA,EAAAA,QAAcP,EACtB,EAEYS,EAAkB,SAAAzB,GAC7B,IAAMgB,EAAU,CACdC,OAAQ,MACRC,IAAI,GAAD,OAAKL,EAAWC,EAAkBd,EAAlC,YACHmB,OAAQ,CACNC,QAASR,GAEXS,QAAS,CACPC,OAAQ,qBAIZ,OAAOC,EAAAA,EAAAA,QAAcP,EACtB,EAEYb,EAAkB,SAAAH,GAC7B,IAAMgB,EAAU,CACdC,OAAQ,MACRC,IAAI,GAAD,OAAKL,EAAWC,EAAkBd,EAAlC,YACHmB,OAAQ,CACNC,QAASR,GAEXS,QAAS,CACPC,OAAQ,qBAIZ,OAAOC,EAAAA,EAAAA,QAAcP,EACtB,EAEYU,EAAe,SAAAC,GAC1B,IAAMX,EAAU,CACdC,OAAQ,MACRC,IAAKL,EAjEiB,kBAkEtBM,OAAQ,CACNS,MAAOD,EACPP,QAASR,GAEXS,QAAS,CACPC,OAAQ,qBAIZ,OAAOC,EAAAA,EAAAA,QAAcP,EACtB,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/moviesApi.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  & svg {\n    width: 20px;\n    height: 20px;\n    margin-left: 5px;\n\n    fill: orangered;\n  }\n\n  & h4 {\n    margin-bottom: 10px;\n  }\n\n  & p {\n    padding-left: 20px;\n  }\n`;\n","import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/moviesApi';\nimport { ReviewsList } from './Reviews.styled';\nimport { BsChatTextFill } from 'react-icons/bs';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async () => {\n      const movieReviews = await getMovieReviews(movieId);\n\n      setReviews(movieReviews.data.results);\n    })();\n  }, [movieId]);\n\n  if (reviews.length === 0) {\n    return <p>We don't have any reviews for this movie</p>;\n  }\n\n  return (\n    <ReviewsList>\n      {reviews.map(({ id, author, content }) => {\n        return (\n          <li key={id}>\n            <h4>\n              Author: {author}\n              <BsChatTextFill />\n            </h4>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </ReviewsList>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'cb35597b2b05bb14bc9f2fcf9c7c8175';\nconst BASE_URL = 'https://api.themoviedb.org';\nconst TRENDING_PATH = '/3/trending/movie/day';\nconst MOVIE_INFO_PATH = '/3/movie/';\nconst MOVIE_SEARCH_PATH = '/3/search/movie';\n\nexport function getTrendingMovies() {\n  const options = {\n    method: 'GET',\n    url: BASE_URL + TRENDING_PATH,\n    params: {\n      api_key: API_KEY,\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return axios.request(options);\n}\n\nexport const getMovieInfo = movieId => {\n  const options = {\n    method: 'GET',\n    url: BASE_URL + MOVIE_INFO_PATH + movieId,\n    params: {\n      api_key: API_KEY,\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return axios.request(options);\n};\n\nexport const getMovieCredits = movieId => {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL + MOVIE_INFO_PATH + movieId}/credits`,\n    params: {\n      api_key: API_KEY,\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return axios.request(options);\n};\n\nexport const getMovieReviews = movieId => {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL + MOVIE_INFO_PATH + movieId}/reviews`,\n    params: {\n      api_key: API_KEY,\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return axios.request(options);\n};\n\nexport const searchMovies = searchQuery => {\n  const options = {\n    method: 'GET',\n    url: BASE_URL + MOVIE_SEARCH_PATH,\n    params: {\n      query: searchQuery,\n      api_key: API_KEY,\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return axios.request(options);\n};\n"],"names":["ReviewsList","styled","useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","movieReviews","data","results","length","map","id","author","content","API_KEY","BASE_URL","MOVIE_INFO_PATH","getTrendingMovies","options","method","url","params","api_key","headers","accept","axios","getMovieInfo","getMovieCredits","searchMovies","searchQuery","query"],"sourceRoot":""}