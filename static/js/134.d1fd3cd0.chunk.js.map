{"version":3,"file":"static/js/134.d1fd3cd0.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","pages/Movies.jsx","services/moviesApi.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FilmsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n\n  & li {\n    display: flex;\n    gap: 5px;\n  }\n\n  & svg {\n    width: 20px;\n    height: 20px;\n\n    fill: orange;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { FilmsList } from './MoviesList.styled';\nimport { TbMovie } from 'react-icons/tb';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <FilmsList>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <TbMovie />\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </FilmsList>\n  );\n};\n\nexport default MoviesList;\n","import styled from '@emotion/styled';\n\nexport const PageSection = styled.section`\n  padding-top: 20px;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { PageSection, SectionTitle } from './Section.styled';\n\nconst Section = ({ children, title }) => {\n  return (\n    <PageSection>\n      {title && <SectionTitle>{title}</SectionTitle>}\n      {children}\n    </PageSection>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport Section from 'components/Section/Section';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'services/moviesApi';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryName = searchParams.get('query');\n\n  useEffect(() => {\n    if (!queryName) {\n      return;\n    }\n\n    (async () => {\n      try {\n        setIsLoading(true);\n        const searchMoviesResult = await searchMovies(queryName);\n        setMovies(searchMoviesResult.data.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [queryName]);\n\n  const onSearch = e => {\n    e.preventDefault();\n\n    if (!e.target.elements.query.value.trim()) {\n      return;\n    }\n\n    setSearchParams({ query: e.target.elements.query.value.trim() });\n\n    e.target.reset();\n  };\n\n  return (\n    <Section>\n      <form onSubmit={onSearch}>\n        <input type=\"text\" name=\"query\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {!isLoading && <MoviesList movies={movies} />}\n      {isLoading && <div>Trying to find {queryName} movie</div>}\n      {movies.length === 0 && queryName && !isLoading && (\n        <p>Sorry, we don't have any movies with name {queryName}</p>\n      )}\n    </Section>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'cb35597b2b05bb14bc9f2fcf9c7c8175';\nconst BASE_URL = 'https://api.themoviedb.org';\nconst TRENDING_PATH = '/3/trending/movie/day';\nconst MOVIE_INFO_PATH = '/3/movie/';\nconst MOVIE_SEARCH_PATH = '/3/search/movie';\n\nexport function getTrendingMovies() {\n  const options = {\n    method: 'GET',\n    url: BASE_URL + TRENDING_PATH,\n    params: {\n      api_key: API_KEY,\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return axios.request(options);\n}\n\nexport const getMovieInfo = movieId => {\n  const options = {\n    method: 'GET',\n    url: BASE_URL + MOVIE_INFO_PATH + movieId,\n    params: {\n      api_key: API_KEY,\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return axios.request(options);\n};\n\nexport const getMovieCredits = movieId => {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL + MOVIE_INFO_PATH + movieId}/credits`,\n    params: {\n      api_key: API_KEY,\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return axios.request(options);\n};\n\nexport const getMovieReviews = movieId => {\n  const options = {\n    method: 'GET',\n    url: `${BASE_URL + MOVIE_INFO_PATH + movieId}/reviews`,\n    params: {\n      api_key: API_KEY,\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return axios.request(options);\n};\n\nexport const searchMovies = searchQuery => {\n  const options = {\n    method: 'GET',\n    url: BASE_URL + MOVIE_SEARCH_PATH,\n    params: {\n      query: searchQuery,\n      api_key: API_KEY,\n    },\n    headers: {\n      accept: 'application/json',\n    },\n  };\n\n  return axios.request(options);\n};\n"],"names":["FilmsList","styled","movies","location","useLocation","map","movie","to","id","state","from","title","PageSection","SectionTitle","children","useState","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","queryName","get","useEffect","searchMovies","searchMoviesResult","data","results","console","log","onSubmit","e","preventDefault","target","elements","query","value","trim","reset","type","name","length","API_KEY","BASE_URL","MOVIE_INFO_PATH","getTrendingMovies","options","method","url","params","api_key","headers","accept","axios","getMovieInfo","movieId","getMovieCredits","getMovieReviews","searchQuery"],"sourceRoot":""}